"""removed tasks table

Revision ID: 0002
Revises: 0001
Create Date: 2023-08-14 14:39:01.244378

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0002"
down_revision = "0001"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_gas_system_task_locks_task_id", table_name="task_locks", schema="gas_system"
    )
    op.drop_table("task_locks", schema="gas_system")
    op.drop_index("ix_gas_system_tasks_name", table_name="tasks", schema="gas_system")
    op.drop_table("tasks", schema="gas_system")
    # ### end Alembic commands ###â€‹


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_locks",
        sa.Column(
            "id",
            sa.BIGINT(),
            server_default=sa.text("nextval('gas_system.task_locks_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("task_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["task_id"], ["gas_system.tasks.id"], name="task_locks_task_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="task_locks_pkey"),
        schema="gas_system",
    )
    op.create_index(
        "ix_gas_system_task_locks_task_id",
        "task_locks",
        ["task_id"],
        unique=False,
        schema="gas_system",
    )
    op.create_table(
        "tasks",
        sa.Column(
            "id",
            sa.BIGINT(),
            server_default=sa.text("nextval('gas_system.tasks_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="tasks_pkey"),
        schema="gas_system",
    )
    op.create_index(
        "ix_gas_system_tasks_name", "tasks", ["name"], unique=False, schema="gas_system"
    )
    # ### end Alembic commands ###
