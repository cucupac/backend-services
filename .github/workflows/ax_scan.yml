name: ax_scan_ci

on:
  push:
    branches:
      - main
    paths:
      - "ax_scan/**"
  pull_request:
    paths:
      - "ax_scan/**"

env:
  # DB
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  DB_URL: "postgresql://user:password@localhost/example"
  DB_SCHEMA: "ax_scan"

  # EVM
  EVM_WORMHOLE_BRIDGE: ""
  EVM_LAYERZERO_BRIDGE: ""

  # RPCs
  ETHEREUM_RPC: ${{ secrets.ETHEREUM_RPC }}
  BSC_RPC: ${{ secrets.BSC_RPC }}
  POLYGON_RPC: ${{ secrets.POLYGON_RPC }}
  AVALANCHE_RPC: ${{ secrets.AVALANCHE_RPC }}
  FANTOM_RPC: ${{ secrets.FANTOM_RPC }}
  ARBITRUM_RPC: ${{ secrets.ARBITRUM_RPC }}
  CELO_RPC: ${{ secrets.CELO_RPC }}
  OPTIMISM_RPC: ${{ secrets.OPTIMISM_RPC }}
  GNOSIS_RPC: ${{ secrets.GNOSIS_RPC }}

jobs:
  run-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r ax_scan/requirements.txt

      - name: Create containers
        id: create-containers
        run: |
          docker run -d \
          --name test_ax_database \
          --env POSTGRES_HOST=db \
          --env POSTGRES_PORT=5444 \
          --env POSTGRES_USER=postgres \
          --env POSTGRES_PASSWORD=postgres \
          --env POSTGRES_DB=ax_services_dev_test \
          -p 5444:5444 \
          library/postgres:12-alpine -p 5444

      - name: Database setup
        id: database-setup
        run: |
          python ci/initialize_database.py
          cd ax_scan
          alembic upgrade head

      - name: Lint apps
        id: lint
        run: |
          cd ax_scan
          make lint
        continue-on-error: false

      - name: Format check
        id: format_check
        run: |
          cd ax_scan
          make format-check
        continue-on-error: false

      - name: Run tests
        id: tests
        run: |
          cd ax_scan
          make test
        continue-on-error: false
