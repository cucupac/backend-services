"""initial schema

Revision ID: 0001
Revises: 
Create Date: 2023-07-19 23:38:24.069722

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0001"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tasks",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="wh_relayer",
    )
    op.create_index(
        op.f("ix_wh_relayer_tasks_name"),
        "tasks",
        ["name"],
        unique=True,
        schema="wh_relayer",
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("emitter_address", sa.String(), nullable=True),
        sa.Column("from_address", sa.String(), nullable=True),
        sa.Column("to_address", sa.String(), nullable=True),
        sa.Column("source_chain_id", sa.Integer(), nullable=False),
        sa.Column("dest_chain_id", sa.Integer(), nullable=True),
        sa.Column("amount", sa.BigInteger(), nullable=True),
        sa.Column("sequence", sa.BigInteger(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="wh_relayer",
    )
    op.create_index(
        op.f("ix_wh_relayer_transactions_from_address"),
        "transactions",
        ["from_address"],
        unique=False,
        schema="wh_relayer",
    )
    op.create_index(
        op.f("ix_wh_relayer_transactions_to_address"),
        "transactions",
        ["to_address"],
        unique=False,
        schema="wh_relayer",
    )
    op.create_index(
        "ix_emitter_address_source_chain_id_sequence",
        "transactions",
        ["emitter_address", "source_chain_id", "sequence"],
        unique=True,
        schema="wh_relayer",
    )
    op.create_table(
        "relays",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("message", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("transaction_hash", sa.String(), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column("cache_status", sa.String(), nullable=False),
        sa.Column("grpc_status", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["wh_relayer.transactions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="wh_relayer",
    )
    op.create_index(
        op.f("ix_wh_relayer_relays_transaction_id"),
        "relays",
        ["transaction_id"],
        unique=True,
        schema="wh_relayer",
    )
    op.create_table(
        "task_locks",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["wh_relayer.tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="wh_relayer",
    )
    op.create_index(
        op.f("ix_wh_relayer_task_locks_task_id"),
        "task_locks",
        ["task_id"],
        unique=True,
        schema="wh_relayer",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_wh_relayer_task_locks_task_id"),
        table_name="task_locks",
        schema="wh_relayer",
    )
    op.drop_table("task_locks", schema="wh_relayer")
    op.drop_index(
        op.f("ix_wh_relayer_relays_transaction_id"),
        table_name="relays",
        schema="wh_relayer",
    )
    op.drop_table("relays", schema="wh_relayer")
    op.drop_index(
        "ix_emitter_address_source_chain_id_sequence",
        table_name="transactions",
        schema="wh_relayer",
    )
    op.drop_index(
        op.f("ix_wh_relayer_transactions_to_address"),
        table_name="transactions",
        schema="wh_relayer",
    )
    op.drop_index(
        op.f("ix_wh_relayer_transactions_from_address"),
        table_name="transactions",
        schema="wh_relayer",
    )
    op.drop_table("transactions", schema="wh_relayer")
    op.drop_index(
        op.f("ix_wh_relayer_tasks_name"), table_name="tasks", schema="wh_relayer"
    )
    op.drop_table("tasks", schema="wh_relayer")
    # ### end Alembic commands ###
